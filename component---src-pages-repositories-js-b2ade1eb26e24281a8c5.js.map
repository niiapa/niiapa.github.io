{"version":3,"sources":["webpack:///./src/pages/repositories.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/components/seo.js","webpack:///./src/components/footer.js","webpack:///./src/components/navbar.js","webpack:///./src/components/layout.js"],"names":["Repositories","react__WEBPACK_IMPORTED_MODULE_1___default","a","createElement","_components_layout__WEBPACK_IMPORTED_MODULE_2__","_components_seo__WEBPACK_IMPORTED_MODULE_3__","title","className","name","url","description","tech","map","repository","index","key","href","target","rel","m","module","exports","require","default","react__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","react__WEBPACK_IMPORTED_MODULE_0___default","n","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","gatsby_link__WEBPACK_IMPORTED_MODULE_2__","gatsby_link__WEBPACK_IMPORTED_MODULE_2___default","d","__webpack_exports__","React","createContext","PropTypes","object","string","isRequired","func","ProdPageRenderer","_ref","location","pageResources","InternalPageRenderer","Object","assign","json","propTypes","shape","pathname","SEO","lang","meta","site","_public_static_d_1218903283_json__WEBPACK_IMPORTED_MODULE_0__","data","metaDescription","siteMetadata","react__WEBPACK_IMPORTED_MODULE_2___default","react_helmet__WEBPACK_IMPORTED_MODULE_3___default","htmlAttributes","titleTemplate","content","property","twitterHandle","concat","defaultProps","arrayOf","Footer","_689194556","react_default","socials","social","Navbar","link","gatsby_browser_entry","to","activeClassName","Layout","children","Fragment","navbar","footer","node"],"mappings":"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","file":"component---src-pages-repositories-js-b2ade1eb26e24281a8c5.js","sourcesContent":["import React from 'react';\nimport Layout from '../components/layout';\nimport SEO from '../components/seo';\n\nconst Repositories = () => {\n    const list = [\n        {\n            name: 'react-typescript-starter',\n            url: 'https://github.com/niiapa/react-typescript-starter',\n            description: 'Quick starter template for ReactJS applications using Typescript',\n            tech: [\n                'react-js',\n                'typescript'\n            ]\n        }\n    ];\n    \n    return (\n        <Layout>\n            <SEO title=\"Repositories\"/>\n            \n            <div className='list'>\n            {\n                list.map((repository, index) => (\n                    <a key={index} className='item' href={repository.url} target='_blank'  rel='noopener noreferrer'>\n                        <h3>{repository.name}</h3>\n                        \n                        <p>\n                            {repository.description}\n                        </p>\n                        \n                        {\n                            repository.tech.map((tech) => (\n                                <div key={tech} className='meta'>{tech}</div>\n                            ))\n                        }\n                    </a>\n                ))\n            }\n            </div>\n        </Layout>\n    );\n};\n\nexport default Repositories;\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  withAssetPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\n\nconst StaticQueryContext = React.createContext({})\n\nfunction StaticQueryDataRenderer({ staticQueryData, data, query, render }) {\n  const finalData = data\n    ? data.data\n    : staticQueryData[query] && staticQueryData[query].data\n\n  return (\n    <React.Fragment>\n      {finalData && render(finalData)}\n      {!finalData && <div>Loading (StaticQuery)</div>}\n    </React.Fragment>\n  )\n}\n\nconst StaticQuery = props => {\n  const { data, query, render, children } = props\n\n  return (\n    <StaticQueryContext.Consumer>\n      {staticQueryData => (\n        <StaticQueryDataRenderer\n          data={data}\n          query={query}\n          render={render || children}\n          staticQueryData={staticQueryData}\n        />\n      )}\n    </StaticQueryContext.Consumer>\n  )\n}\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withAssetPrefix,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\n\nconst ProdPageRenderer = ({ location, pageResources }) => {\n  if (!pageResources) {\n    return null\n  }\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","/**\n * SEO component that queries for data with\n *  Gatsby's useStaticQuery React hook\n *\n * See: https://www.gatsbyjs.org/docs/use-static-query/\n */\n\nimport { graphql, useStaticQuery } from 'gatsby';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport Helmet from 'react-helmet';\n\nfunction SEO({ description, lang, meta, title }) {\n    const { site } = useStaticQuery(\n        graphql`\n            query {\n                site {\n                    siteMetadata {\n                        title\n                        description\n                        author\n                        twitterHandle\n                    }\n                }\n            }\n        `,\n    );\n    \n    const metaDescription = description || site.siteMetadata.description;\n    \n    return (\n        <Helmet\n            htmlAttributes={{\n                lang,\n            }}\n            title={title}\n            titleTemplate={`%s | ${site.siteMetadata.title}`}\n            meta={[\n                {\n                    name: `description`,\n                    content: metaDescription,\n                },\n                {\n                    property: `og:title`,\n                    content: title,\n                },\n                {\n                    property: `og:description`,\n                    content: metaDescription,\n                },\n                {\n                    property: `og:type`,\n                    content: `website`,\n                },\n                {\n                    name: `twitter:card`,\n                    content: `summary`,\n                },\n                {\n                    name: `twitter:creator`,\n                    content: site.siteMetadata.twitterHandle,\n                },\n                {\n                    name: `twitter:title`,\n                    content: title,\n                },\n                {\n                    name: `twitter:description`,\n                    content: metaDescription,\n                },\n            ].concat(meta)}\n        />\n    );\n}\nSEO.defaultProps = {\n    lang: `en`,\n    meta: [],\n    description: ``,\n};\n\nSEO.propTypes = {\n    description: PropTypes.string,\n    lang: PropTypes.string,\n    meta: PropTypes.arrayOf(PropTypes.object),\n    title: PropTypes.string.isRequired,\n};\n\nexport default SEO;\n","import { useStaticQuery, graphql } from 'gatsby';\nimport React from 'react';\n\nconst Footer = () => {\n    const data = useStaticQuery(\n        graphql`\n            query {\n                site {\n                    siteMetadata {\n                        socials {\n                            name\n                            url\n                        }\n                    }\n                }\n            }\n        `\n    );\n    \n    return (\n        <footer>\n            <ul>\n            {\n                data.site.siteMetadata.socials.map((social, index) => (\n                    <li key={index}>\n                        <a href={social.url} target='_blank' rel='noopener noreferrer'>\n                            {social.name}\n                        </a>\n                    </li>\n                ))\n            }\n            </ul>\n        </footer>\n    );\n};\n\nexport default Footer;\n","import { Link } from 'gatsby';\nimport React from 'react';\n\nconst Navbar = () => {\n    const links = [\n        {\n            name: 'Home',\n            url: '/',\n        },\n        {\n            name: 'Projects',\n            url: 'projects'\n        },\n        {\n            name: 'Repositories',\n            url: 'repositories'\n        }\n    ];\n    \n    return (\n        <nav>\n            <ul>\n                {\n                    links.map((link, index) => (\n                        <li key={index}>\n                            <Link to={link.url} activeClassName='active-link'>\n                                {link.name}\n                            </Link>\n                        </li>\n                    ))\n                }\n            </ul>\n        </nav>\n    );\n};\n\nexport default Navbar;\n","/**\n * Layout component that queries for data\n * with Gatsby's useStaticQuery component\n *\n * See: https://www.gatsbyjs.org/docs/use-static-query/\n */\n\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport '../styles/style.scss';\nimport Footer from './footer';\nimport Navbar from './navbar';\n\nconst Layout = ({ children }) => {\n    \n    return (\n        <React.Fragment>\n            <Navbar />\n            \n            <main>\n                {children}\n            </main>\n            \n            <Footer/>\n        </React.Fragment>\n    );\n};\n\nLayout.propTypes = {\n    children: PropTypes.node.isRequired,\n};\n\nexport default Layout;\n"],"sourceRoot":""}